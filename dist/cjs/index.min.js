"use strict";
function _typeof(e) {
  return (_typeof =
    "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
      ? function(e) {
          return typeof e;
        }
      : function(e) {
          return e &&
            "function" == typeof Symbol &&
            e.constructor === Symbol &&
            e !== Symbol.prototype
            ? "symbol"
            : typeof e;
        })(e);
}
function _defineProperty(e, t, r) {
  return (
    t in e
      ? Object.defineProperty(e, t, {
          value: r,
          enumerable: !0,
          configurable: !0,
          writable: !0
        })
      : (e[t] = r),
    e
  );
}
function ownKeys(t, e) {
  var r = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e &&
      (o = o.filter(function(e) {
        return Object.getOwnPropertyDescriptor(t, e).enumerable;
      })),
      r.push.apply(r, o);
  }
  return r;
}
function _objectSpread2(t) {
  for (var e = 1; e < arguments.length; e++) {
    var r = null != arguments[e] ? arguments[e] : {};
    e % 2
      ? ownKeys(r, !0).forEach(function(e) {
          _defineProperty(t, e, r[e]);
        })
      : Object.getOwnPropertyDescriptors
      ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r))
      : ownKeys(r).forEach(function(e) {
          Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
        });
  }
  return t;
}
var broker = function(e, t, o, n) {
  (t = t || !1),
    (o = "function" == typeof o ? o : function() {}),
    (n =
      "function" == typeof n
        ? n
        : function(e) {
            return e;
          });
  var r = (e = e || {
      endpoint: "/",
      types: [],
      method: "GET",
      body: {},
      headers: {}
    }).types,
    y = [
      r[0],
      {
        type: r[1],
        payload: function(e, t, r) {
          return (
            o(e, t, r),
            r.json().then(function(e) {
              return n(e);
            })
          );
        }
      },
      {
        type: r[2],
        meta: function(e, t, r) {
          return (
            o(e, t, r),
            r
              ? { status: r.status, statusText: r.statusText }
              : { status: "Network request failed" }
          );
        }
      }
    ],
    u = t ? e.body : JSON.stringify(e.body);
  return _defineProperty({}, RSAA, {
    endpoint: e.endpoint || "",
    method: e.method || "GET",
    types: e.types ? y : [],
    headers: _objectSpread2(
      {},
      "object" === _typeof(optoins.headers) ? e.headers : {}
    ),
    body: u
  });
};
module.exports = broker;
